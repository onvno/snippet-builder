-
    prefix: '@antd_form_base(login)'
    body: >
        /**1
         * 经过 getFieldDecorator 包装的控件，表单控件会自动添加 value（或 valuePropName 指定的其他属性） onChange（或 trigger 指定的其他属性），数据同步将被 Form 接管，这会导致以下结果：
        你不再需要也不应该用 onChange 来做同步，但还是可以继续监听 onChange 等事件。

        你不能用控件的 value defaultValue 等属性来设置表单域的值，默认值可以用 getFieldDecorator 里的
        initialValue。

        你不应该用 setState，可以使用 this.props.form.setFieldsValue 来动态改变表单值。
         * 
         * 2
         * 充值需要使用resetFields，文档参考http://10.95.156.112:8001/components/form-cn/
         */

        import React, {Component} from 'react';

        import { Form, Icon, Input, Button, Checkbox } from 'antd';

        const FormItem = Form.Item;


        class BaseLoginForm extends Component {
          handleSubmit = (e) => {
            e.preventDefault();
            this.props.form.validateFields((err, values) => {
              if (!err) {
                console.log('Received values of form: ', values);
              }
            });
          }
          render() {
            const { getFieldDecorator } = this.props.form;
            return (
              <Form onSubmit={this.handleSubmit} className="login-form">
                <FormItem>
                  {getFieldDecorator('userName', {
                    rules: [{ required: true, message: 'Please input your username!' }],
                  })(
                    <Input prefix={<Icon type="user" style={{ fontSize: 13 }} />} placeholder="Username" />
                  )}
                </FormItem>
                <FormItem>
                  {getFieldDecorator('password', {
                    rules: [{ required: true, message: 'Please input your Password!' }],
                  })(
                    <Input prefix={<Icon type="lock" style={{ fontSize: 13 }} />} type="password" placeholder="Password" />
                  )}
                </FormItem>
                <FormItem>
                  {getFieldDecorator('remember', {
                    valuePropName: 'checked',
                    initialValue: true,
                  })(
                    <Checkbox>Remember me</Checkbox>
                  )}
                  <a className="login-form-forgot" href="">Forgot password</a>
                  <Button type="primary" htmlType="submit" className="login-form-button">
                    Log in
                  </Button>
                  Or <a href="">register now!</a>
                </FormItem>
              </Form>
            );
          }
        }

        export default Form.create()(BaseLoginForm);
    description: 基本form表单(login)
